{"ast":null,"code":"var _jsxFileName = \"/Users/amychen/walkornah/src/components/Temp.js\";\nimport React, { Component, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Temp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getTempInfo = () => {\n      axios.get(\"api.openweathermap.org/data/2.5/weather?lat=49.203&lon=-122.9914&appid=8f61a1e09924a4c204d0927cfe0ff964\").then(response => {\n        let data = response.data;\n        console.log(data);\n        this.setState({\n          //   temp: data.main.temp,\n          //   wind: data.wind.speed,\n          content: [{\n            coord: response.data.coord\n          }, {\n            base: response.data.base\n          }]\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      lat: 49.203,\n      lon: -122.9914,\n      temp: null,\n      wind: null,\n      content: [{\n        coord: \"\"\n      }, {\n        base: \"\"\n      }]\n    };\n  }\n\n  componentDidMount() {\n    this.getTempInfo();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"console.log(this.state.content.coord);\", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Tempp: \", this.state.temp]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wind: \", this.state.wind]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Temp;","map":{"version":3,"sources":["/Users/amychen/walkornah/src/components/Temp.js"],"names":["React","Component","useState","axios","Temp","constructor","props","getTempInfo","get","then","response","data","console","log","setState","content","coord","base","catch","error","state","lat","lon","temp","wind","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAC3BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBC,WAVmB,GAUL,MAAM;AAClBJ,MAAAA,KAAK,CACFK,GADH,CAEI,yGAFJ,EAIGC,IAJH,CAISC,QAAD,IAAc;AAClB,YAAIC,IAAI,GAAGD,QAAQ,CAACC,IAApB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,aAAKG,QAAL,CAAc;AACZ;AACA;AACAC,UAAAA,OAAO,EAAE,CACP;AACEC,YAAAA,KAAK,EAAEN,QAAQ,CAACC,IAAT,CAAcK;AADvB,WADO,EAIP;AAAEC,YAAAA,IAAI,EAAEP,QAAQ,CAACC,IAAT,CAAcM;AAAtB,WAJO;AAHG,SAAd;AAUD,OAjBH,EAkBGC,KAlBH,CAkBUC,KAAD,IAAW;AAChBP,QAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACD,OApBH;AAqBD,KAhCkB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE,MADM;AAEXC,MAAAA,GAAG,EAAE,CAAC,QAFK;AAGXC,MAAAA,IAAI,EAAE,IAHK;AAIXC,MAAAA,IAAI,EAAE,IAJK;AAKXT,MAAAA,OAAO,EAAE,CAAC;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAD,EAAgB;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAhB;AALE,KAAb;AAOD;;AAwBDQ,EAAAA,iBAAiB,GAAG;AAClB,SAAKlB,WAAL;AACD;;AACDmB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,wEAEE;AAAA,8BAAW,KAAKN,KAAL,CAAWG,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,6BAAU,KAAKH,KAAL,CAAWI,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AA7C0B;;AAgD7B,eAAepB,IAAf","sourcesContent":["import React, { Component, useState } from \"react\";\nimport axios from \"axios\";\n\nclass Temp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lat: 49.203,\n      lon: -122.9914,\n      temp: null,\n      wind: null,\n      content: [{ coord: \"\" }, { base: \"\" }],\n    };\n  }\n  getTempInfo = () => {\n    axios\n      .get(\n        \"api.openweathermap.org/data/2.5/weather?lat=49.203&lon=-122.9914&appid=8f61a1e09924a4c204d0927cfe0ff964\"\n      )\n      .then((response) => {\n        let data = response.data;\n        console.log(data);\n        this.setState({\n          //   temp: data.main.temp,\n          //   wind: data.wind.speed,\n          content: [\n            {\n              coord: response.data.coord,\n            },\n            { base: response.data.base },\n          ],\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  componentDidMount() {\n    this.getTempInfo();\n  }\n  render() {\n    return (\n      <div>\n        console.log(this.state.content.coord);\n        <p>Tempp: {this.state.temp}</p>\n        <p>Wind: {this.state.wind}</p>\n      </div>\n    );\n  }\n}\n\nexport default Temp;\n"]},"metadata":{},"sourceType":"module"}