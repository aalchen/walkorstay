{"ast":null,"code":"var _jsxFileName = \"/Users/amychen/walkornah/src/components/Geo.js\";\nimport React, { Component, useState } from \"react\";\nimport axios from \"axios\";\nimport Temp from \"./Temp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Geo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getGeoInfo = () => {\n      axios.get(\"https://ipapi.co/json/\").then(response => {\n        let data = response.data;\n        this.setState({\n          countryName: data.country_name,\n          cityName: data.city,\n          latitude: data.latitude,\n          longitude: data.longitude\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.getTempInfo = () => {\n      axios.get( // \"http://api.openweathermap.org/data/2.5/weather?lat=49.203&lon=-122.9914&appid=8f61a1e09924a4c204d0927cfe0ff964\"\n      `http://api.openweathermap.org/data/2.5/weather?lat=${this.state.latitude}&lon=${this.state.longitude}&appid=8f61a1e09924a4c204d0927cfe0ff964` // \"http://api.openweathermap.org/data/2.5/weather?lat=${props.lat}&lon=${props.lon}&appid=8f61a1e09924a4c204d0927cfe0ff964\"\n      ).then(response => {\n        let data = response.data;\n        console.log(data);\n        this.setState({\n          temp: data.main.temp,\n          wind: data.wind.speed\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      countryName: \"\",\n      cityName: \"\",\n      lat: null,\n      lon: null\n    };\n  }\n\n  componentDidMount() {\n    this.getGeoInfo();\n    this.getTempInfo();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Country Name: \", this.state.countryName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"City Name: \", this.state.cityName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Latitude: \", this.state.latitude]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Longitude: \", this.state.longitude]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Tempp: \", this.state.temp]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wind: \", this.state.wind]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  } //  TEMP STUFF\n\n\n}\n\nexport default Geo;","map":{"version":3,"sources":["/Users/amychen/walkornah/src/components/Geo.js"],"names":["React","Component","useState","axios","Temp","Geo","constructor","props","getGeoInfo","get","then","response","data","setState","countryName","country_name","cityName","city","latitude","longitude","catch","error","console","log","getTempInfo","state","temp","main","wind","speed","lat","lon","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAC1BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,UATmB,GASN,MAAM;AACjBL,MAAAA,KAAK,CACFM,GADH,CACO,wBADP,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,YAAIC,IAAI,GAAGD,QAAQ,CAACC,IAApB;AACA,aAAKC,QAAL,CAAc;AACZC,UAAAA,WAAW,EAAEF,IAAI,CAACG,YADN;AAEZC,UAAAA,QAAQ,EAAEJ,IAAI,CAACK,IAFH;AAGZC,UAAAA,QAAQ,EAAEN,IAAI,CAACM,QAHH;AAIZC,UAAAA,SAAS,EAAEP,IAAI,CAACO;AAJJ,SAAd;AAMD,OAVH,EAWGC,KAXH,CAWUC,KAAD,IAAW;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OAbH;AAcD,KAxBkB;;AAAA,SA8CnBG,WA9CmB,GA8CL,MAAM;AAClBrB,MAAAA,KAAK,CACFM,GADH,EAEI;AACC,4DAAqD,KAAKgB,KAAL,CAAWP,QAAS,QAAO,KAAKO,KAAL,CAAWN,SAAU,yCAH1G,CAII;AAJJ,QAMGT,IANH,CAMSC,QAAD,IAAc;AAClB,YAAIC,IAAI,GAAGD,QAAQ,CAACC,IAApB;AACAU,QAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACA,aAAKC,QAAL,CAAc;AACZa,UAAAA,IAAI,EAAEd,IAAI,CAACe,IAAL,CAAUD,IADJ;AAEZE,UAAAA,IAAI,EAAEhB,IAAI,CAACgB,IAAL,CAAUC;AAFJ,SAAd;AAID,OAbH,EAcGT,KAdH,CAcUC,KAAD,IAAW;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OAhBH;AAiBD,KAhEkB;;AAEjB,SAAKI,KAAL,GAAa;AACXX,MAAAA,WAAW,EAAE,EADF;AAEXE,MAAAA,QAAQ,EAAE,EAFC;AAGXc,MAAAA,GAAG,EAAE,IAHM;AAIXC,MAAAA,GAAG,EAAE;AAJM,KAAb;AAMD;;AAiBDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKxB,UAAL;AACA,SAAKgB,WAAL;AACD;;AAEDS,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA,qCAAkB,KAAKR,KAAL,CAAWX,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kCAAe,KAAKW,KAAL,CAAWT,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,iCAAc,KAAKS,KAAL,CAAWP,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,kCAAe,KAAKO,KAAL,CAAWN,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA,8BAAW,KAAKM,KAAL,CAAWC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA,6BAAU,KAAKD,KAAL,CAAWG,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD,GA3CyB,CA6C1B;;;AA7C0B;;AAoE5B,eAAevB,GAAf","sourcesContent":["import React, { Component, useState } from \"react\";\nimport axios from \"axios\";\nimport Temp from \"./Temp\";\n\nclass Geo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countryName: \"\",\n      cityName: \"\",\n      lat: null,\n      lon: null,\n    };\n  }\n  getGeoInfo = () => {\n    axios\n      .get(\"https://ipapi.co/json/\")\n      .then((response) => {\n        let data = response.data;\n        this.setState({\n          countryName: data.country_name,\n          cityName: data.city,\n          latitude: data.latitude,\n          longitude: data.longitude,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  componentDidMount() {\n    this.getGeoInfo();\n    this.getTempInfo();\n  }\n\n  render() {\n    return (\n      <div>\n        <p>Country Name: {this.state.countryName}</p>\n        <p>City Name: {this.state.cityName}</p>\n        <p>Latitude: {this.state.latitude}</p>\n        <p>Longitude: {this.state.longitude}</p>\n        <p>Tempp: {this.state.temp}</p>\n        <p>Wind: {this.state.wind}</p>\n        {/* <Temp lat={this.state.latitude} lon={this.state.longitude} /> */}\n      </div>\n    );\n  }\n\n  //  TEMP STUFF\n\n  getTempInfo = () => {\n    axios\n      .get(\n        // \"http://api.openweathermap.org/data/2.5/weather?lat=49.203&lon=-122.9914&appid=8f61a1e09924a4c204d0927cfe0ff964\"\n        `http://api.openweathermap.org/data/2.5/weather?lat=${this.state.latitude}&lon=${this.state.longitude}&appid=8f61a1e09924a4c204d0927cfe0ff964`\n        // \"http://api.openweathermap.org/data/2.5/weather?lat=${props.lat}&lon=${props.lon}&appid=8f61a1e09924a4c204d0927cfe0ff964\"\n      )\n      .then((response) => {\n        let data = response.data;\n        console.log(data);\n        this.setState({\n          temp: data.main.temp,\n          wind: data.wind.speed,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n}\n\nexport default Geo;\n"]},"metadata":{},"sourceType":"module"}